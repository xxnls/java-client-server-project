/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import com.formdev.flatlaf.FlatLightLaf;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import static java.awt.event.KeyEvent.*;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;
import static javax.swing.GroupLayout.Alignment.CENTER;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import static javax.swing.SwingConstants.LEFT;
import static javax.swing.SwingConstants.RIGHT;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.border.EmptyBorder;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Bartosz
 */
public class MainWindow extends javax.swing.JFrame {
    
    private Dimension originalSize;
    private int mousePosX, mousePosY;
    private boolean isSideBarExpanded = false;
    private Socket socket;
    //static MainWindow mainWindow;
    
    static ArrayList<Employee> employees;
    EmployeesTableModel etm = new EmployeesTableModel(employees);
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        setLocationRelativeTo(null);
        loginDialog.setVisible(true);
        loginDialog.setLocationRelativeTo(null);  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginDialog = new javax.swing.JDialog();
        loginPanel = new javax.swing.JPanel();
        loginDetails = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        loginUsername = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        loginPassword = new javax.swing.JPasswordField();
        showPasswordCheckBox = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        contactAdminLabel = new javax.swing.JLabel();
        loginError = new javax.swing.JLabel();
        bigNameLabel = new javax.swing.JLabel();
        infoBarPanelLogin = new javax.swing.JPanel();
        closeLabel1 = new javax.swing.JLabel();
        newEmployeeDialog = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        firstNameField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        lastNameField = new javax.swing.JTextField();
        positionField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        salaryField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        addEmployeeDialogButton = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        infoBarPanel = new javax.swing.JPanel();
        closeLabel = new javax.swing.JLabel();
        fullscreenLabel = new javax.swing.JLabel();
        minimizeLabel = new javax.swing.JLabel();
        logoLabel = new javax.swing.JLabel();
        sideBarPanel = new javax.swing.JPanel();
        menuLabel = new javax.swing.JLabel();
        employeeLabel = new javax.swing.JLabel();
        warehouseLabel = new javax.swing.JLabel();
        footerBarPanel = new javax.swing.JPanel();
        contentPanel = new javax.swing.JPanel();
        employeesPanel = new javax.swing.JPanel();
        contentPanelToolBar = new javax.swing.JToolBar();
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        employeesTable = new javax.swing.JTable();
        warehousePanel = new javax.swing.JPanel();

        loginDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        loginDialog.setTitle("Login Panel");
        loginDialog.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        loginDialog.setMinimumSize(new java.awt.Dimension(300, 600));
        loginDialog.setUndecorated(true);
        loginDialog.setResizable(false);
        loginDialog.setSize(new java.awt.Dimension(300, 600));
        loginDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                loginDialogWindowClosing(evt);
            }
        });
        loginDialog.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loginEnterPressed(evt);
            }
        });

        loginPanel.setAlignmentX(0.0F);
        loginPanel.setAlignmentY(0.0F);
        loginPanel.setAutoscrolls(true);
        loginPanel.setMaximumSize(new java.awt.Dimension(300, 600));
        loginPanel.setMinimumSize(new java.awt.Dimension(300, 600));
        loginPanel.setPreferredSize(new java.awt.Dimension(300, 600));

        loginDetails.setPreferredSize(new java.awt.Dimension(200, 100));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Username");
        jLabel3.setToolTipText("");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel3.setName(""); // NOI18N

        loginUsername.setText("user");
        loginUsername.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        loginUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loginEnterPressed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Password");
        jLabel4.setToolTipText("");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel4.setName(""); // NOI18N

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        loginButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loginEnterPressed(evt);
            }
        });

        loginPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loginEnterPressed(evt);
            }
        });

        showPasswordCheckBox.setText("Show password");
        showPasswordCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPasswordCheckBoxActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Need help logging in?");

        contactAdminLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        contactAdminLabel.setText("<html><u>Click to contact the administrator.</u></html>");
        contactAdminLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        contactAdminLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contactAdminLabelMouseClicked(evt);
            }
        });

        loginError.setForeground(new java.awt.Color(255, 0, 0));
        loginError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout loginDetailsLayout = new javax.swing.GroupLayout(loginDetails);
        loginDetails.setLayout(loginDetailsLayout);
        loginDetailsLayout.setHorizontalGroup(
            loginDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loginDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loginUsername)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loginButton, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                    .addComponent(loginPassword)
                    .addComponent(contactAdminLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(loginDetailsLayout.createSequentialGroup()
                        .addComponent(showPasswordCheckBox)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(loginError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        loginDetailsLayout.setVerticalGroup(
            loginDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(showPasswordCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(loginError, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(contactAdminLabel)
                .addContainerGap())
        );

        bigNameLabel.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 24)); // NOI18N
        bigNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bigNameLabel.setText("Vehicle Parts System");
        bigNameLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        infoBarPanelLogin.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        infoBarPanelLogin.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                infoBarMouseDragged(evt);
            }
        });
        infoBarPanelLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                infoBarMousePressed(evt);
            }
        });

        closeLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        closeLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icon/close.png"))); // NOI18N
        closeLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closeLabel1.setOpaque(true);
        closeLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeLabelMouseClickedDialog(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                titleBarButtonsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                titleBarButtonsMouseExited(evt);
            }
        });

        javax.swing.GroupLayout infoBarPanelLoginLayout = new javax.swing.GroupLayout(infoBarPanelLogin);
        infoBarPanelLogin.setLayout(infoBarPanelLoginLayout);
        infoBarPanelLoginLayout.setHorizontalGroup(
            infoBarPanelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoBarPanelLoginLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closeLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        infoBarPanelLoginLayout.setVerticalGroup(
            infoBarPanelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoBarPanelLoginLayout.createSequentialGroup()
                .addComponent(closeLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bigNameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(loginDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
            .addComponent(infoBarPanelLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addComponent(infoBarPanelLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bigNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(168, 168, 168)
                .addComponent(loginDetails, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout loginDialogLayout = new javax.swing.GroupLayout(loginDialog.getContentPane());
        loginDialog.getContentPane().setLayout(loginDialogLayout);
        loginDialogLayout.setHorizontalGroup(
            loginDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        loginDialogLayout.setVerticalGroup(
            loginDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        newEmployeeDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        newEmployeeDialog.setTitle("New Employee");
        newEmployeeDialog.setMinimumSize(new java.awt.Dimension(320, 340));
        newEmployeeDialog.setResizable(false);

        jLabel1.setText("First name:");

        jLabel5.setText("Last name:");

        jLabel6.setText("Position:");

        jLabel7.setText("Salary:");

        addEmployeeDialogButton.setText("Add employee");
        addEmployeeDialogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEmployeeDialogButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newEmployeeDialogLayout = new javax.swing.GroupLayout(newEmployeeDialog.getContentPane());
        newEmployeeDialog.getContentPane().setLayout(newEmployeeDialogLayout);
        newEmployeeDialogLayout.setHorizontalGroup(
            newEmployeeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newEmployeeDialogLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(newEmployeeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addEmployeeDialogButton)
                    .addGroup(newEmployeeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel7)
                        .addComponent(salaryField, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(positionField, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        newEmployeeDialogLayout.setVerticalGroup(
            newEmployeeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newEmployeeDialogLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(positionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(salaryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addEmployeeDialogButton)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Vehicle Storage System");
        setUndecorated(true);
        setSize(new java.awt.Dimension(1000, 600));

        mainPanel.setMinimumSize(new java.awt.Dimension(1000, 600));
        mainPanel.setName(""); // NOI18N
        mainPanel.setLayout(new java.awt.BorderLayout());

        infoBarPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        infoBarPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                infoBarMouseDragged(evt);
            }
        });
        infoBarPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                infoBarMousePressed(evt);
            }
        });

        closeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        closeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icon/close.png"))); // NOI18N
        closeLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closeLabel.setOpaque(true);
        closeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                titleBarButtonsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                titleBarButtonsMouseExited(evt);
            }
        });

        fullscreenLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fullscreenLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icon/fullscreen.png"))); // NOI18N
        fullscreenLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        fullscreenLabel.setOpaque(true);
        fullscreenLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fullscreenLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                titleBarButtonsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                titleBarButtonsMouseExited(evt);
            }
        });

        minimizeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimizeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icon/minimize.png"))); // NOI18N
        minimizeLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizeLabel.setOpaque(true);
        minimizeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                titleBarButtonsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                titleBarButtonsMouseExited(evt);
            }
        });

        logoLabel.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        logoLabel.setText("Vehicle Parts System");

        javax.swing.GroupLayout infoBarPanelLayout = new javax.swing.GroupLayout(infoBarPanel);
        infoBarPanel.setLayout(infoBarPanelLayout);
        infoBarPanelLayout.setHorizontalGroup(
            infoBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoBarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 709, Short.MAX_VALUE)
                .addComponent(minimizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fullscreenLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        infoBarPanelLayout.setVerticalGroup(
            infoBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(infoBarPanelLayout.createSequentialGroup()
                .addGroup(infoBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fullscreenLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(closeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minimizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        mainPanel.add(infoBarPanel, java.awt.BorderLayout.PAGE_START);

        sideBarPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 1, new java.awt.Color(0, 0, 0)));
        sideBarPanel.setPreferredSize(new java.awt.Dimension(37, 600));
        sideBarPanel.setLayout(null);

        menuLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icon/menu.png"))); // NOI18N
        menuLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuLabel.setOpaque(true);
        menuLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                titleBarButtonsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                titleBarButtonsMouseExited(evt);
            }
        });
        sideBarPanel.add(menuLabel);
        menuLabel.setBounds(0, 0, 36, 36);

        employeeLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        employeeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        employeeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icon/employee.png"))); // NOI18N
        employeeLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        employeeLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        employeeLabel.setOpaque(true);
        employeeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sideBarLabelClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                titleBarButtonsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                titleBarButtonsMouseExited(evt);
            }
        });
        sideBarPanel.add(employeeLabel);
        employeeLabel.setBounds(0, 82, 36, 36);

        warehouseLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        warehouseLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        warehouseLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icon/warehouse.png"))); // NOI18N
        warehouseLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        warehouseLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        warehouseLabel.setOpaque(true);
        warehouseLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sideBarLabelClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                titleBarButtonsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                titleBarButtonsMouseExited(evt);
            }
        });
        sideBarPanel.add(warehouseLabel);
        warehouseLabel.setBounds(0, 120, 36, 36);

        mainPanel.add(sideBarPanel, java.awt.BorderLayout.LINE_START);

        footerBarPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout footerBarPanelLayout = new javax.swing.GroupLayout(footerBarPanel);
        footerBarPanel.setLayout(footerBarPanelLayout);
        footerBarPanelLayout.setHorizontalGroup(
            footerBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        footerBarPanelLayout.setVerticalGroup(
            footerBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
        );

        mainPanel.add(footerBarPanel, java.awt.BorderLayout.PAGE_END);

        contentPanel.setLayout(new java.awt.CardLayout());

        employeesPanel.setLayout(new javax.swing.BoxLayout(employeesPanel, javax.swing.BoxLayout.PAGE_AXIS));

        contentPanelToolBar.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        contentPanelToolBar.setRollover(true);
        contentPanelToolBar.setMaximumSize(new java.awt.Dimension(3333333, 33));
        contentPanelToolBar.setMinimumSize(new java.awt.Dimension(969, 33));

        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icon/add.png"))); // NOI18N
        addButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addButton.setFocusable(false);
        addButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addButton.setMaximumSize(new java.awt.Dimension(32, 32));
        addButton.setMinimumSize(new java.awt.Dimension(32, 32));
        addButton.setPreferredSize(new java.awt.Dimension(32, 32));
        addButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        contentPanelToolBar.add(addButton);

        removeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icon/remove.png"))); // NOI18N
        removeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        removeButton.setFocusable(false);
        removeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeButton.setMaximumSize(new java.awt.Dimension(32, 32));
        removeButton.setMinimumSize(new java.awt.Dimension(32, 32));
        removeButton.setPreferredSize(new java.awt.Dimension(32, 32));
        removeButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });
        contentPanelToolBar.add(removeButton);

        employeesPanel.add(contentPanelToolBar);

        employeesTable.setModel(etm);
        employeesTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(employeesTable);

        employeesPanel.add(jScrollPane2);

        contentPanel.add(employeesPanel, "employeesPanel");

        javax.swing.GroupLayout warehousePanelLayout = new javax.swing.GroupLayout(warehousePanel);
        warehousePanel.setLayout(warehousePanelLayout);
        warehousePanelLayout.setHorizontalGroup(
            warehousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 963, Short.MAX_VALUE)
        );
        warehousePanelLayout.setVerticalGroup(
            warehousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 527, Short.MAX_VALUE)
        );

        contentPanel.add(warehousePanel, "warehousePanel");

        mainPanel.add(contentPanel, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Login logic that performs upon button action
     * @param evt 
     */
    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        if(loginUsername.getText().equals("user")) {
            loginDialog.dispose();
            setVisible(true);
        }else{ 
            loginError.setText("Wrong username or password!");
            Timer timer = new Timer(3000, e -> {
                loginError.setText("");
                dispose();
            });
            timer.setRepeats(false);
            timer.start();
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    /**
     * On 'ENTER' press, 'click' login button.
     * @param evt 
     */
    private void loginEnterPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginEnterPressed
        if(evt.getKeyCode() == VK_ENTER)
            loginButton.doClick();
    }//GEN-LAST:event_loginEnterPressed

   
    /**
     * Show password when user uses the checkbox, go back to default method of showing password when user stops uncheks checkbox.
     * @param evt 
     */
    private void showPasswordCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPasswordCheckBoxActionPerformed
        if(showPasswordCheckBox.isSelected())
            loginPassword.setEchoChar((char)0);
        else
            loginPassword.setEchoChar((Character)UIManager.get("PasswordField.echoChar"));
    }//GEN-LAST:event_showPasswordCheckBoxActionPerformed

    /**
     * Stops program when user exits the login panel.
     * @param evt 
     */
    private void loginDialogWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_loginDialogWindowClosing
        System.exit(0);
    }//GEN-LAST:event_loginDialogWindowClosing

    /**
     * Open admin contact option pane when clicking contact label in login panel.
     * @param evt 
     */
    private void contactAdminLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contactAdminLabelMouseClicked
        JOptionPane.showMessageDialog(null, "ADMIN_FNAME, ADMIN_LNAME, CONTACT\nADMIN_FNAME, ADMIN_LNAME, CONTACT", "Contact administrator", 1);
    }//GEN-LAST:event_contactAdminLabelMouseClicked

    /**
     * If cursor enters the JLabel territory, change background color.
     * @param evt 
     */
    private void titleBarButtonsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleBarButtonsMouseEntered
        // red for close button (this checks if variable name contains 'close.png' icon)
        if(evt.getSource().toString().contains("close.png"))
            ((JLabel) evt.getSource()).setBackground(Color.RED);
        else
        // light gray for others
        ((JLabel) evt.getSource()).setBackground(Color.LIGHT_GRAY);
    }//GEN-LAST:event_titleBarButtonsMouseEntered

    /**
     * Action performed on mouse click on 'close' title bar button.
     * @param evt 
     */
    private void closeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeLabelMouseClicked
        try{
            socket.close();
        }catch(IOException e){
            System.out.println("Error while disconnecting from server.");
        }
        System.exit(0);
    }//GEN-LAST:event_closeLabelMouseClicked

    /**
     * If cursor exits the button, go back to 'null' background.
     * @param evt 
     */
    private void titleBarButtonsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleBarButtonsMouseExited
        ((JLabel) evt.getSource()).setBackground(null);
    }//GEN-LAST:event_titleBarButtonsMouseExited

    /**
     * Minimize on minimizeLabel click.
     * @param evt 
     */
    private void minimizeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeLabelMouseClicked
        setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimizeLabelMouseClicked

    /**
     * Fullscreen handling, changing icon, positioning window.
     * @param evt 
     */
    private void fullscreenLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fullscreenLabelMouseClicked
        if (originalSize == null) {
            originalSize = getSize();
            
            GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();
            GraphicsDevice device = env.getDefaultScreenDevice();
            Dimension screenSize = device.getDefaultConfiguration().getBounds().getSize();

            setSize(screenSize);
            setLocation(0,0);
            
            fullscreenLabel.setIcon(new ImageIcon(getClass().getResource("/resources/icon/fullscreen_exit.png")));
        }else {
            setSize(originalSize);
            originalSize = null;
            setLocationRelativeTo(null);
            fullscreenLabel.setIcon(new ImageIcon(getClass().getResource("/resources/icon/fullscreen.png")));
        }
    }//GEN-LAST:event_fullscreenLabelMouseClicked

    /**
     * Info bar mouse dragging handling.
     * @param evt 
     */
    private void infoBarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoBarMouseDragged
        // main window
        if(evt.getSource() == infoBarPanel)
            this.setLocation(this.getX() + evt.getX() - mousePosX, this.getY() + evt.getY() - mousePosY);
        else
            // login panel
            loginDialog.setLocation(loginDialog.getX() + evt.getX() - mousePosX, loginDialog.getY() + evt.getY() - mousePosY);
    }//GEN-LAST:event_infoBarMouseDragged

    /**
     * Info bar mouse dragging handling.
     * @param evt 
     */
    private void infoBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoBarMousePressed
        mousePosX = evt.getX();
        mousePosY = evt.getY();
    }//GEN-LAST:event_infoBarMousePressed

    /**
     * Helper function.
     * @see MainWindow#menuLabelMouseClicked(java.awt.event.MouseEvent) 
     * @param label Label to work on.
     * @param text Text to set.
     */
    private void sideBarPanelChangeLabel(JLabel label, String text) {
        Dimension labelExpanded = new Dimension(199, 36);
        Dimension labelNotExpanded = new Dimension(36, 36);
        
        if(!isSideBarExpanded){
            label.setSize(labelExpanded);
            label.setText(text);
            label.setHorizontalAlignment(JTextField.LEFT);
            label.setBorder(new EmptyBorder(0,6,0,0));  
        }else{
            label.setSize(labelNotExpanded);
            label.setText(null);
            label.setHorizontalAlignment(JTextField.CENTER);
            label.setBorder(null);
        }
    }
    
    /**
     * Side bar expanding handler.
     * @param evt 
     */
    private void menuLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuLabelMouseClicked
        if(!isSideBarExpanded){
            sideBarPanel.setPreferredSize(new Dimension(200, getHeight() - 72));
            mainPanel.revalidate();
            
            sideBarPanelChangeLabel(employeeLabel, "Employees");
            sideBarPanelChangeLabel(warehouseLabel, "Warehouse");

            isSideBarExpanded = true;
        }else{
            sideBarPanel.setPreferredSize(new Dimension(37, getHeight() - 72));
            mainPanel.revalidate();

            sideBarPanelChangeLabel(employeeLabel, null);
            sideBarPanelChangeLabel(warehouseLabel, null);
            
            isSideBarExpanded = false;
        }
    }//GEN-LAST:event_menuLabelMouseClicked

    /**
     * Side bar buttons on click handling.
     * @param evt 
     */
    private void sideBarLabelClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sideBarLabelClicked
        Object src = evt.getSource();
        CardLayout card = (CardLayout)contentPanel.getLayout();
        
        if(src == employeeLabel)
            card.show(contentPanel, "employeesPanel");
        
        if(src == warehouseLabel)
            card.show(contentPanel, "warehousePanel");
    }//GEN-LAST:event_sideBarLabelClicked

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed

        newEmployeeDialog.setVisible(true);
        newEmployeeDialog.setLocationRelativeTo(null);
    }//GEN-LAST:event_addButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        int selectedRowIndex = employeesTable.getSelectedRow();
        if (selectedRowIndex != -1) {
            employees.remove(employees.get(selectedRowIndex));
            refreshTable();
            sendEmployeesToServer();
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void closeLabelMouseClickedDialog(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeLabelMouseClickedDialog
        System.exit(0);
    }//GEN-LAST:event_closeLabelMouseClickedDialog

    private void addEmployeeDialogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEmployeeDialogButtonActionPerformed
        String firstName = firstNameField.getText();
        String lastName = lastNameField.getText();
        String position = positionField.getText();
        double salary = Double.parseDouble(salaryField.getText());
        
        if(!firstName.isBlank() && !lastName.isBlank() && !position.isBlank()) {
            employees.add(new Employee(firstName, lastName, position, salary));

            sendEmployeesToServer();
            newEmployeeDialog.dispose();
            //requestEmployeesFromServer();
            refreshTable();
        }else{
            newEmployeeDialog.dispose();
        }
    }//GEN-LAST:event_addEmployeeDialogButtonActionPerformed

    public boolean connectToServer(String host, int port, int timeout) {
        try {
            socket = new Socket();
            socket.connect(new InetSocketAddress(host, port), timeout);
            return true;
        } catch (IOException e) {
            e.printStackTrace();
            return false;
        }
    }
    
    public void refreshTable() {
        EmployeesTableModel newTableModel = new EmployeesTableModel(employees);
        employeesTable.setModel(newTableModel);
    }
    

    public void requestEmployeesFromServer() {
        try {
            PrintWriter writer = new PrintWriter(socket.getOutputStream(), true);
            BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream()));

            writer.flush();
            writer.println("getEmployees");
            writer.flush();

            employees.clear();

            String line;
            while (!(line = reader.readLine()).equals("END")) {
                int id = Integer.parseInt(line);
                String firstName = reader.readLine();
                String lastName = reader.readLine();
                String position = reader.readLine();
                double salary = Double.parseDouble(reader.readLine());

                Employee employee = new Employee(firstName, lastName, position, salary);
                employee.setId(id);
                employees.add(employee);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public void sendEmployeesToServer() {
        try {
            PrintWriter writer = new PrintWriter(socket.getOutputStream(), true);

            System.out.println("Sending employees to server.");
            
            writer.println("sendEmployees");
            
            for (Employee employee : employees) {
                writer.flush();
                writer.println(employee.getId());
                writer.println(employee.getFirstName());
                writer.println(employee.getLastName());
                writer.println(employee.getPosition());
                writer.println(employee.getSalary());
            }
            
            writer.println("END");
            writer.flush();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    private class EmployeesTableModel extends AbstractTableModel {

        private List<Employee> data;
        private String[] columnNames = {"ID", "First Name", "Last Name", "Position", "Salary"};
        
        public EmployeesTableModel(List<Employee> data) {
            this.data = data;
        }

        @Override
        public int getRowCount() {
            return data.size();
        }

        @Override
        public int getColumnCount() {
            return columnNames.length;
        }

        public void setData(List<Employee> newData) {
            this.data = newData;
            fireTableDataChanged();
        }

        
        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Employee employee = data.get(rowIndex);
            switch (columnIndex) {
                case 0:
                    return employee.getId();
                case 1:
                    return employee.getFirstName();
                case 2:
                    return employee.getLastName();
                case 3:
                    return employee.getPosition();
                case 4:
                    return employee.getSalary();
                default:
                    return null;
            }
        }
        
        @Override
        public String getColumnName(int column) {
            return columnNames[column];
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        FlatLightLaf.setup();
        //</editor-fold>

        employees = new ArrayList<>();
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainWindow mainWindow = new MainWindow();
                mainWindow.connectToServer("localhost", 12345, 1000);
                mainWindow.requestEmployeesFromServer();
                mainWindow.refreshTable();
                mainWindow.sendEmployeesToServer();
//                mainWindow.requestEmployeesFromServer();
//                mainWindow.refreshTable();
                
                if(employees.isEmpty())
                    System.out.println("empty");
                for(Employee e : employees)
                    System.out.println(e);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton addEmployeeDialogButton;
    private javax.swing.JLabel bigNameLabel;
    private javax.swing.JLabel closeLabel;
    private javax.swing.JLabel closeLabel1;
    private javax.swing.JLabel contactAdminLabel;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JToolBar contentPanelToolBar;
    private javax.swing.JLabel employeeLabel;
    private javax.swing.JPanel employeesPanel;
    private javax.swing.JTable employeesTable;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JPanel footerBarPanel;
    private javax.swing.JLabel fullscreenLabel;
    private javax.swing.JPanel infoBarPanel;
    private javax.swing.JPanel infoBarPanelLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JButton loginButton;
    private javax.swing.JPanel loginDetails;
    private javax.swing.JDialog loginDialog;
    private javax.swing.JLabel loginError;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JPasswordField loginPassword;
    private javax.swing.JTextField loginUsername;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel menuLabel;
    private javax.swing.JLabel minimizeLabel;
    private javax.swing.JDialog newEmployeeDialog;
    private javax.swing.JTextField positionField;
    private javax.swing.JButton removeButton;
    private javax.swing.JTextField salaryField;
    private javax.swing.JCheckBox showPasswordCheckBox;
    private javax.swing.JPanel sideBarPanel;
    private javax.swing.JLabel warehouseLabel;
    private javax.swing.JPanel warehousePanel;
    // End of variables declaration//GEN-END:variables
}